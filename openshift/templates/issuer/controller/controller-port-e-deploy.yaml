 
 ######################################################################
# oc process -f database-build.yaml --param-file=database-build.param | oc apply -f -
######################################################################
---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ${APP_NAME}${SUFFIX}
objects:
######################################################################
# Database PostgreSQL
######################################################################
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: ${POSTGRESQL_NAME}
    labels:
      name: ${POSTGRESQL_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      role: database
      env: ${ENV_NAME}
  spec:
    description: |
      Allow the api(s) to access the db.
    ingress:
      - from:
          - podSelector:
              matchLabels:
                role: ${ROLE}
                app: ${APP_GROUP}
                env: ${ENV_NAME}
            namespaceSelector:
              matchLabels:
                name: ${NAMESPACE_NAME}
                environment: ${ENV_NAME}
          - podSelector:
              matchLabels:
                role: ${BACKUP_ROLE}
                env: ${ENV_NAME}
            namespaceSelector:
              matchLabels:
                name: ${NAMESPACE_NAME}
                environment: ${ENV_NAME}
        ports:
          - protocol: TCP
            port: 5432
    podSelector:
      matchLabels:
        role: ${ROLE}
        app: ${APP_NAME}
        env: ${ENV_NAME}

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${POSTGRESQL_NAME}-files
    labels:
      name: ${POSTGRESQL_NAME}-files
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      role: database
      env: ${ENV_NAME}
  spec:
    storageClassName: ${STORAGE_CLASS_NAME}
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${POSTGRESQL_VOLUME_SIZE}

- kind: Service
  apiVersion: v1
  metadata:
    name: ${POSTGRESQL_NAME}
    labels:
      name: ${POSTGRESQL_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      role: database
      env: ${ENV_NAME}
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="${POSTGRESQL_NAME}")].port}
  spec:
    ports:
    - name: ${POSTGRESQL_NAME}
      protocol: TCP
      port: ${{POSTGRESQL_PORT}}
      targetPort: ${{POSTGRESQL_PORT}}
      nodePort: 0
    selector:
      name: ${POSTGRESQL_NAME}
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${POSTGRESQL_NAME}
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      name: ${POSTGRESQL_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      app.kubernetes.io/runtime: postgresql
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/managed-by: "yaml"
      role: database
      env: ${ENV_NAME}
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${POSTGRESQL_NAME}
        from:
          kind: ImageStreamTag
          name: postgresql:10-el8
          namespace: openshift
#          name: ${POSTGRESQL_IMAGE}:${POSTGRESQL_TAG}
#          namespace: ${IMAGE_NAMESPACE}
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    selector:
      name: ${POSTGRESQL_NAME}
    template:
      metadata:
        labels:
          name: ${POSTGRESQL_NAME}
      spec:
        containers:
        - name: ${POSTGRESQL_NAME}
          image:
          ports:
          - containerPort: ${{POSTGRESQL_PORT}}
            protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-password
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-name
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-admin-password                
          volumeMounts:
          - name: ${POSTGRESQL_NAME}-files
            mountPath: "/var/lib/pgsql/data"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: IfNotPresent
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: ${POSTGRESQL_NAME}-files
          persistentVolumeClaim:
            claimName: ${POSTGRESQL_NAME}-files
        restartPolicy: Always
        dnsPolicy: ClusterFirst
  status: {}

######################################################################
# ACA-py Controller et Web Site to issue
######################################################################
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APP_NAME}
    labels:
      name: ${APP_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      role: controller
      env: ${ENV_NAME}
  spec:
    ports:
    - name: ${APP_NAME}
      port: ${{PORT}}
      protocol: TCP
      targetPort: ${{PORT}}
    selector:
      name: ${APP_NAME}

- kind: Route
  apiVersion: v1
  metadata:
    name: ${APP_NAME}
    labels:
      name: ${APP_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      role: controller
      env: ${ENV_NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    port:
      targetPort: 8080
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APP_NAME}
    labels:
      name: ${APP_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      app.kubernetes.io/runtime: django
      app.kubernetes.io/name: django
      app.kubernetes.io/managed-by: "yaml"
      role: controller
      env: ${ENV_NAME}
    annotations:
      description: Defines how to deploy the application server
      app.openshift.io/connects-to: >-
        [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${POSTGRESQL_NAME}"},
        {"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${AGENT_NAME}"}]
  spec:
    replicas: 1
    selector:
      name: ${APP_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        name: ${APP_NAME}
        labels:
          name: ${APP_NAME}
          app: ${APP_GROUP}
          app.kubernetes.io/part-of: ${APP_GROUP}
          app-group: ${APP_GROUP}
          role: controller
          env: ${ENV_NAME}
        annotations:
          description: Defines how to deploy the application server
          app.openshift.io/connects-to: >-
            [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${POSTGRESQL_NAME}"},
            {"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${AGENT_NAME}"}]
      spec:
        containers:
        - name: ${APP_NAME}
          env:
          - name: PORT
            value: ${PORT}
          - name: SITE_URL
            value: ${SITE_URL}
          - name: AGENT_URL
            value: ${AGENT_URL}
          - name: DEBUG
            value: ${DEBUG}
          - name: AGENT_ADMIN_API_KEY
            value: ${AGENT_ADMIN_API_KEY}
          - name: EMAIL_HOST
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-email-host
                key: email-host
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-name
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-password
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-port
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: ${POSTGRESQL_NAME}
                key: database-hostname
          - name: EMAIL_PORT
            value: ${EMAIL_PORT}
          - name: EMAIL_USE_TLS
            value: ${EMAIL_USE_TLS}
          - name: EMAIL_HOST_USER
            value: ${EMAIL_HOST_USER}
          - name: EMAIL_HOST_PASSWORD
            value: ${EMAIL_HOST_PASSWORD}  
          - name: APP_MODULE
            value: ${APP_MODULE}
          - name: APP_CONFIG
            value: ${APP_CONFIG}
          - name: WEB_CONCURRENCY
            value: ${WEB_CONCURRENCY}
          image: ${IMAGE_NAME}
          ports:
          - containerPort: ${{PORT}}
            protocol: TCP
#          readinessProbe:
#            timeoutSeconds: 30
#            initialDelaySeconds: 3
#            httpGet:
#              path: "/"
#              port: ${{PORT}}
#          livenessProbe:
#            timeoutSeconds: 30
#            initialDelaySeconds: 300
#            httpGet:
#              path: "/"
#              port: ${{PORT}}
          imagePullPolicy: Always
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - name: init-db
          image: busybox
          command: ['sh', '-c']
          args: ["until nc -z ${POSTGRESQL_NAME}:\"${POSTGRESQL_PORT}\"; do echo waiting for db; sleep 2; done;"]
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
#          namespace: openshift
#          name: 'python:3.9-ubi8'
          name: ${IMAGE_NAME}:${TAG_NAME}
#          namespace: ${IMAGE_NAMESPACE}

######################################################################
# Secrets
######################################################################
- kind: Secret
  apiVersion: v1
  metadata:
    name: ${POSTGRESQL_NAME}
    labels:
      name: ${POSTGRESQL_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      role: database
      env: ${ENV_NAME}
    annotations:
      template.openshift.io/expose-database-hostname: "{.data['database-hostname']}"
      template.openshift.io/expose-database-name: "{.data['database-name']}"
      template.openshift.io/expose-database-port: "{.data['database-port']}"
      template.openshift.io/expose-database-user: "{.data['database-user']}"
      template.openshift.io/expose-database-password: "{.data['database-password']}"
      template.openshift.io/expose-database-admin-user: "{.data['database-admin-user']}"
      template.openshift.io/expose-database-admin-password: "{.data['database-admin-password']}"
      template.openshift.io/expose-database-connectionstring: "{.data['database-connectionstring']}"
  stringData:
    database-hostname: ${POSTGRESQL_NAME}
    database-name: ${POSTGRESQL_DATABASE_NAME}
    database-port: ${POSTGRESQL_PORT}
    database-user: ${POSTGRESQL_USER}
    database-password: ${POSTGRESQL_PASSWORD}
    database-admin-user: "postgres"
    database-admin-password: ${POSTGRESQL_ADMIN_PASSWORD}
    database-connectionstring: Host=${POSTGRESQL_NAME};Port=${POSTGRESQL_PORT};Database=${POSTGRESQL_NAME};Username=${POSTGRESQL_USER};Password=${POSTGRESQL_PASSWORD};
  type: Opaque

- kind: Secret
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-email-host
    labels:
      name: ${APP_NAME}
      app: ${APP_GROUP}
      app.kubernetes.io/part-of: ${APP_GROUP}
      app-group: ${APP_GROUP}
      role: controller
      env: ${ENV_NAME}
  stringData:
    email-host: ${SMTP_EMAIL_HOST}
  type: Opaque

######################################################################
# Parameters
######################################################################
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all the objects defined in this template.
  required: true
  value: email-verification-service
- name: APP_GROUP
  displayName: App Group
  description: The name assigned to all of the deployments in this project.
  required: true
  value: email-verification-service
- name: NAMESPACE_NAME
  displayName: NameSpace name
  description: name of the project namespace
  required: true
  value: a99fd4
- name: APP_NAME
  displayName: App Name
  description: Used to group components together in the OpenShift console.
  required: true
  value: ' '
- name: SUFFIX
  displayName: Suffix
  description: A name suffix used for all objects
  required: false
  value: ''
- name: ENV_NAME
  displayName: Environment Name
  description: Environment name. For the build environment this will typically be 'tools'
  required: true
  value: dev
- name: ROLE
  displayName: Role
  description: The role of this service within the application - used for Network Policies
  required: true
  value: service
- name: AGENT_ROLE
  displayName: Role
  description: The role of the agent within the application - used for Network Policies
  required: true
  value: agent
- name: AGENT_SERVICE_NAME
  displayName: Agent Service Name
  description: The name of the agent service
  required: true
  value: email-verification-agent
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
  required: false
  value: email-verification-dev.apps.silver.devops.gov.bc.ca
- name: IMAGE_NAMESPACE
  displayName: Namespace containing application images.
  required: true
  value: a99fd4-tools
- name: IMAGE_NAME
  displayName: The generated image name.
  required: true
  value: ''
- name: TAG_NAME
  displayName: Environment TAG name
  description: The TAG name for this environment, e.g., dev, test, prod.
  required: true
  value: dev
- name: APP_MODULE
  displayName: Application Module
  description: Used to run the application with Gunicorn.
  required: true
  value: email_verification_service.wsgi
- name: APP_CONFIG
  displayName: Gunicorn Config File
  description: option to be passed to gunicorn -c
  required: false
  value: python:email_verification_service.settings
- name: WEB_CONCURRENCY
  displayName: Web Concurrency
  description: Controls/overrides the number of Gunicorn workers.  This MUST be set to 1 when using a SQLite wallet.
  required: true
  value: "1"
- name: PORT
  displayName: Port
  description: The port on which the service will listen.
  required: true
  value: "8080"
- name: SITE_URL
  displayName: Site URL
  description: The URL for the site
  required: true
  value: https://email-verification-dev.apps.silver.devops.gov.bc.ca
- name: DEBUG
  displayName: Debug
  description: Flag to indicate whether the service in running in debug mode.
  required: true
  value: "true"

- name: AGENT_NAME
  displayName: Agent Name
  required: true
  value: agent
- name: AGENT_URL
  displayName: Agent URL
  description: The URL for the agent's admin endpoint.
  required: true
  value: http://email-verification-agent:5000
- name: AGENT_ADMIN_API_KEY
  displayName: Agent API key for admin site 
  description: The key for the agent's admin endpoint.
  required: true

- name: POSTGRESQL_NAME
  displayName: PostgreSQL Service Database Name
  description: The name of the PostgreSQL Service database.
  required: true
  value: controller-db
- name: POSTGRESQL_DATABASE_NAME
  displayName: PostgreSQL Database Name
  description: The name of the PostgreSQL database.
  required: true
  value: email-verification-service-db
- name: POSTGRESQL_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the
    database.
  required: true
  generate: expression
  value: 'dbuser'
- name: POSTGRESQL_PASSWORD
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.  Needs to be basee64
    encoded.
  required: true
  generate: expression
  from: '[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}'
- name: POSTGRESQL_ADMIN_PASSWORD
  displayName: PostgreSQL Admin Password
  description: Password for the 'postgres' PostgreSQL administrative account.  Needs
    to be basee64 encoded.
  required: true
  generate: expression
  from: '[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}'
- name: POSTGRESQL_VOLUME_SIZE
  displayName: PostgreSql volume size
  description: The size of the PostgreSql persistent volume, e.g. 512Mi, 1Gi, 2Gi.
  required: true
  value: 1Gi
- name: POSTGRESQL_PORT
  displayName: PostgreSql key management service port
  required: true
  description: The port number of the deployed PostgreSql database. Only used when WALLET_STORAGE_TYPE = postgres_storage.
  value: '5432'
- name: POSTGRESQL_IMAGE
  displayName: Source Image Name
  required: true
  description: The name of the source image.
  value: database
- name: POSTGRESQL_TAG
  displayName: Source Image Tag
  required: true
  description: The tag of the source image.
  value: 10-el8
- name: BACKUP_ROLE
  displayName: Backup Role
  description: The role of the backup container - used for Network Policies
  required: true
  value: backup-container

- name: SMTP_EMAIL_HOST
  displayName: Email Host Name
  required: true
  value: ''
- name: EMAIL_PORT
  displayName: Email Port
  required: true
  value: "25"
- name: EMAIL_USE_SSL
  displayName: Email Use SSL
  required: true
  value: "false"
- name: EMAIL_HOST_USER
  displayName: Email user name for authentication
  required: true
  value: ""
- name: EMAIL_HOST_PASSWORD
  displayName: Email password for user authentification
  required: true
  value: ""
- name: EMAIL_USE_TLS
  displayName: Email Use TLS
  required: true
  value: "True"
- name: DEFAULT_FROM_EMAIL
  displayName: Couriel utilisé comme default pour l'utilisation du serveur SMTP.
  required: true
  value: "ne-pas-repondre@cqen.ca"

- name: STORAGE_CLASS_NAME
  displayNgp2iption: The storage class of the volume.
  required: true
  value: 'gp2'
- name: CPU_REQUEST
  displayName: Resources CPU Request
  description: The resources CPU request (in cores) for this build.
  required: true
  value: 100m
- name: CPU_LIMIT
  displayName: Resources CPU Limit
  description: The resources CPU limit (in cores) for this build.
  required: true
  value: 750m
- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  description: The resources Memory request (in Mi, Gi, etc) for this build.
  required: true
  value: 256Mi
- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  description: The resources Memory limit (in Mi, Gi, etc) for this build.
  required: true
  value: 1Gi
